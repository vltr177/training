/*–ú–∏–Ω–∏–º—É–º –∏–∑ 4 —á–∏—Å–µ–ª
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é int min (int a, int b, int c, int d) , –Ω–∞—Ö–æ–¥—è—â—É—é –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –¥–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –æ—Ç–≤–µ—Ç.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è —á–µ—Ç—ã—Ä–µ —á–∏—Å–ª–∞.
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏  –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –∏–∑ 4-—Ö –¥–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª.
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.*/
import java.util.Scanner;

class Programm {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        System.out.println(min(a, b, c, d));
    }
    static int min(int a, int b, int c, int d){
        int min = a;
        int [] mas = {b, c, d};
        for (int x: mas){
            if (x < min)
                min = x;
        }
        return min;
    }
}


/*–ò—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é xor —Ä–µ–∞–ª–∏–∑—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é "–ò—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò" –¥–≤—É—Ö –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö x –∏ y. –§—É–Ω–∫—Ü–∏—è Xor –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true, –µ—Å–ª–∏ —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –∏–∑ –µ–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ x –∏–ª–∏ y, –Ω–æ –Ω–µ –æ–±–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–≤–Ω—ã true.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è 2 —á–∏—Å–ª–∞ - x –∏ y (x –∏ y —Ä–∞–≤–Ω—ã 0 –∏–ª–∏ 1, 0 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—é false, 1 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—é true).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ false –∏–ª–∏ true - –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç x –∏ y.
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ. */
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean f = sc.nextInt() != 0;
        boolean s = sc.nextInt() != 0;
        System.out.println(xor(f, s));
    }
    static boolean xor (boolean f, boolean s){
        if ((f||s) & (f!=s))
            return true;
        else
            return false;
    }
}

/*–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
–ù–∞–ø–∏—à–∏—Ç–µ "—Ñ—É–Ω–∫—Ü–∏—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è" election,  –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ (true –∏–ª–∏ false), –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–µ–¥–∏ –∑–Ω–∞—á–µ–Ω–∏–π –µ–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ x, y, z –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è 3 —á–∏—Å–ª–∞ - x, y –∏ z (x, y –∏ z —Ä–∞–≤–Ω—ã 0 –∏–ª–∏ 1, 0 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—é false, 1 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—é true).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç x, y –∏ z.
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.*/
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean f = sc.nextInt() == 1 ? true : false;
        boolean s = sc.nextInt() == 1 ? true : false;
        boolean t = sc.nextInt() == 1 ? true : false;
        System.out.println(election(f, s, t));
    }
    static boolean election(boolean f, boolean s, boolean t) {
        if ( (f||s) & (s||t) & (t||f) )
            return true;
        else
            return false;
    }
}

/*–°–∫–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä
–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ü–∏—Ñ—Ä—ã –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –±—É–∫–≤—ã (–±–æ–ª—å—à–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ). –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é digit_count, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–π–¥—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ–Ω—É–ª–µ–≤–æ–π –¥–ª–∏–Ω—ã. –ò–∑–≤–µ—Å—Ç–Ω–æ —Ç–∞–∫–∂–µ, —á—Ç–æ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 1000 –∑–Ω–∞–∫–æ–≤.
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ —Å—Ç—Ä–æ–∫–µ.
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.*/
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        System.out.println(digit_count(s));
    }
    static int digit_count(String s){
        int count = 0;
        char[] symbols = s.toCharArray();
        for (char symbol: symbols){
            if (Character.isDigit(symbol))
                count++;
        }
        return count;
    }
}

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞
// –î–∞–Ω –º–∞—Å—Å–∏–≤, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, –Ω–æ –º–µ–Ω—è–µ—Ç —Å–∞–º –º–∞—Å—Å–∏–≤, –∞ –∏–º–µ–Ω–Ω–æ: —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –ø–æ —É–±—ã–≤–∞–Ω–∏—é. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] mas = new int[n];
        for (int i = 0; i < n; i++)
            mas[i] = sc.nextInt();
        sort(mas);
        for(int i: mas)
            System.out.print(i + " ");
    }
    static void sort(int [] a){
        for (int i = 1; i < a.length; i++){
            boolean issorted = true;
            for (int j = 0; j < a.length-i; j++){
                if (a[j] < a[j+1]){
                    int temp = a[j];
                    a[j] = a[j+1];
                    a[j+1] = temp;
                    issorted = false;
                }
            }
            if (issorted)
                break;
        }
    }
}

/*–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ –≤ —Å—Ç–µ–ø–µ–Ω—å pow. 
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è 2 —á–∏—Å–ª–∞ - a (–≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ) –∏ n (—Ü–µ–ª–æ–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏  –∑–Ω–∞—á–µ–Ω–∏–µ an.
–ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π pow –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Math –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.*/
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double a = sc.nextDouble();
        int n = sc.nextInt();
        System.out.println(pow(a, n));
    }
    static double pow(double a, int n){
        if (n == 0)
            return 1;
        double res = a;
        for (int i = 1; i<n; i++)
            res *= a;
        return res;
    }
}

/*–ë—ã—Å—Ç—Ä–æ–µ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å (—Ä–µ–∫—É—Ä—Å–∏—è)
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å pow. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–≤–æ–∏—á–Ω–æ–º—É –ª–æ–≥–∞—Ä–∏—Ñ–º—É n.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è 2 —á–∏—Å–ª–∞ - a (–≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ) –∏ n (—Ü–µ–ª–æ–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏  –∑–Ω–∞—á–µ–Ω–∏–µ an.
–†–µ—à–∏—Ç–µ —ç—Ç—É –∑–∞–¥–∞—á—É –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∫—É—Ä—Å–∏—é.
–ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π pow –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Math –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main –º–µ–Ω—è—Ç—å –∑–∞–ø—Ä–µ—â–µ–Ω–æ.*/
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        double a = sc.nextDouble();
        int n = sc.nextInt();
        System.out.println(pow(a, n));
    }
    static double pow(double a, int n){
        double c = 1;
        if (n == 0)
            return 1;
        if (n%2 == 0)
            return pow (a*a, n/2);
        else
            return c = a * pow(a*a, (n - 1)/2);
    }
}

/* +3 *5
–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–æ–∂–Ω–æ –ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–ª—å–∫–æ –æ–ø–µ—Ä–∞—Ü–∏–π ¬´–ø—Ä–∏–±–∞–≤–∏—Ç—å 3¬ª –∏ ¬´—É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ 5¬ª –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —á–∏—Å–ª–∞ 1 —á–∏—Å–ª–æ ùëÅ (ùëÅ - –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 1 000 000). –†–∞–∑—É–º–µ–µ—Ç—Å—è, —Å–∞–º–æ —á–∏—Å–ª–æ 1 –ø–æ–ª—É—á–∏—Ç—å –º–æ–∂–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–µ –ø—Ä–∏–º–µ–Ω—è—è –Ω–∏–∫–∞–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥–∏—Ç—Å—è —á–∏—Å–ª–æ ùëÅ.
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ —á–∏—Å–ª–æ ùëÅ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —á–∏—Å–ª–∞ 1, –∏–ª–∏ NO - –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.*/
import java.util.Scanner;
class Programm {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        System.out.println(calc(n));
    }
    static String calc(int n){
        if (n==1) return "YES";
        if((n-1)%3 == 0 || n%5 == 0) return "YES";
        else return "NO";
    }
}

/*–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä
–î–∞–Ω—ã –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ N –∏ K. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–≤–µ—Å—Ç–∏  –≤—Å–µ —Ü–µ–ø–æ—á–∫–∏ x1, x2, ..., xN —Ç–∞–∫–∏–µ, —á—Ç–æ xi - –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ –∏ 1 ‚â§ xi ‚â§ K.
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í–≤–æ–¥—è—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ N –∏ K (N, K ‚â§ 6).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —Ç—Ä–µ–±—É–µ–º—ã–µ —Ü–µ–ø–æ—á–∫–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ ‚Äì –ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫–µ. –ù–∏–∫–∞–∫–∞—è —Ü–µ–ø–æ—á–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞.*/
import java.util.Scanner;

class Programm {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        generateChains(N, K, "");
    }

    public static void generateChains(int N, int K, String chain) {
        if (N == 0) {
            System.out.println(chain.trim());
        } else {
            for (int i = 1; i <= K; i++) {
                generateChains(N - 1, K, chain + " " + i);
            }
        }
    }
}
